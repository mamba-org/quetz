name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  test_quetz:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        test_database: ["sqlite", "postgres"]
        db_init: ["use-migrations", "create-tables"]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: install micromamba
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba --strip-components=1
          else
            wget -qO- https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
            mv bin/micromamba ./micromamba
          fi
          ./micromamba shell init -s bash -p ~/micromamba
          mkdir -p ~/micromamba/pkgs/
      - name: install deps
        shell: bash -l {0}
        run: |
          export MAMBA_ROOT_PREFIX=~/micromamba
          export MAMBA_EXE=$(pwd)/micromamba
          . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
          ./micromamba create -y -p ~/test_env 'python>=3.7' pip fastapi typer authlib \
                       httpx=0.12.0 sqlalchemy sqlite psycopg2 python-multipart uvicorn zstandard \
                       appdirs toml fsspec conda requests "h2<4.0.0" starlette-full jinja2 itsdangerous alembic conda-build -c conda-forge
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
      - name: test quetz
        shell: bash -l -euo pipefail {0}
        env:
          TEST_DB_BACKEND: ${{ matrix.test_database }}
          QUETZ_TEST_DBINIT: ${{ matrix.db_init }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          echo ${QUETZ_TEST_DBINIT}
          export MAMBA_ROOT_PREFIX=~/micromamba
          export MAMBA_EXE=$(pwd)/micromamba
          . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
          micromamba activate ~/test_env

          # install dev dependencies
          pip install -e .[dev]

          if [ "$TEST_DB_BACKEND" == "postgres" ]; then
            export QUETZ_TEST_DATABASE="postgresql://postgres:mysecretpassword@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres"
            echo "Running with postgres"
          fi

          if [ "$QUETZ_TEST_DBINIT" == "use-migrations"]; then
            echo "Using migrations"
          fi

          export QUETZ_IS_TEST=1

          echo "testing server"
          pip install -e .
          pytest -v ./quetz/tests/

          echo "install and test plugins"
          pip install ./plugins/quetz_runexports
          pytest -v ./plugins/quetz_runexports/tests
          
          pip install ./plugins/quetz_repodata_patching
          pytest -v ./plugins/quetz_repodata_patching

          pip install ./plugins/quetz_conda_suggest
          pytest -v ./plugins/quetz_conda_suggest

          pip install ./plugins/quetz_current_repodata
          pytest -v ./plugins/quetz_current_repodata
